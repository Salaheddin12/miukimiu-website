/************************
Colors
************************/
/************************
Breakpoints
************************/
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
@import url(http://fonts.googleapis.com/css?family=PT+Sans:400,700|Francois+One|Lato|Oswald);
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after {
  content: '';
  content: none;
}

q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/************************
Fonts
************************/
/* *************************************************
** icons
***************************************************/
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?-y9yh1j");
  src: url("../fonts/icomoon.eot?#iefix-y9yh1j") format("embedded-opentype"), url("../fonts/icomoon.woff?-y9yh1j") format("woff"), url("../fonts/icomoon.ttf?-y9yh1j") format("truetype"), url("../fonts/icomoon.svg?-y9yh1j#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
}

/************************
Typi
************************/
html {
  font-size: 100%;
  line-height: 1.5;
}

h1 {
  font-size: 4.875rem;
  line-height: 1;
}

@media all and (min-width: 48em) {
  h1 {
    font-size: 8.4375rem;
    line-height: 1;
  }
}

h2 {
  font-size: 2.1875rem;
}

@media all and (min-width: 48em) {
  h2 {
    font-size: 3.125rem;
  }
}

h3 {
  font-size: 1rem;
}

@media all and (min-width: 48em) {
  h3 {
    font-size: 1.125rem;
  }
}

h4 {
  font-size: 0.875rem;
}

@media all and (min-width: 48em) {
  h4 {
    font-size: 1rem;
  }
}

h5 {
  font-size: 0.875rem;
}

@media all and (min-width: 48em) {
  h5 {
    font-size: 1rem;
  }
}

p {
  font-size: 1rem;
}

@media all and (min-width: 48em) {
  p {
    font-size: 1rem;
  }
}

.home h2 {
  font-size: 2.1875rem;
}

@media all and (min-width: 48em) {
  .home h2 {
    font-size: 3.875rem;
  }
}

.about h2 {
  font-size: 1.25rem;
}

@media all and (min-width: 48em) {
  .about h2 {
    font-size: 1.5625rem;
  }
}

.btn {
  font-size: 1rem;
}

@media all and (min-width: 48em) {
  .btn {
    font-size: 1rem;
  }
}

/* *************************************************
** Buttons
***************************************************/
.btn {
  border-radius: 0px;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  display: inline-block;
  padding: 10px 16px;
}

.btn--ghost {
  background-color: transparent;
  border: 2px solid #fff;
  color: #fff;
  font-weight: normal;
  text-transform: uppercase;
  -webkit-transition: background 0.25s ease-in-out 0s;
  transition: background 0.25s ease-in-out 0s;
}

.btn--ghost:hover {
  background-color: #EEEEEE;
  border: medium none;
  -webkit-transition: background 0.25s ease-in-out 0s;
  transition: background 0.25s ease-in-out 0s;
}

.btn--ghost:active {
  cursor: pointer !important;
}

.btn--download {
  border: 2px solid #0cbda6;
  background: #0cbda6;
  color: #fff;
}

.btn--download:hover {
  color: #fff;
  background: #0aa591;
}

/* *************************************************
** About
***************************************************/
.about {
  padding-top: 80px;
}

.about__pic {
  border-radius: 50%;
  max-width: 220px;
}

@media (min-width: 48em) {
  .about__pic {
    max-width: 100%;
  }
}

.social-icon a {
  color: #909090;
  padding: 5px;
  display: inline-block;
}

.social-icon a:hover {
  color: #707070;
}

/* *************************************************
** Callout
***************************************************/
.callout {
  padding-bottom: 80px;
  padding-top: 80px;
  position: relative;
  background-color: #5A5A5A !important;
  color: #fff;
}

.callout h2 {
  font-size: 30px;
  font-family: "Lato", sans-serif;
  color: #fff;
}

.callout .btn {
  margin: 20px 7px 0px 7px;
}

/* *************************************************
** Experience
***************************************************/
.experience {
  padding-bottom: 120px;
}

.experience h3 {
  color: #5A5A5A;
  font-family: "PT Sans", serif;
}

.experience h4 {
  color: #0cbda6;
}

.experience h5 {
  color: #909090;
  font-weight: 700;
}

/* *************************************************
** Footer
***************************************************/
.footer {
  font-size: 14px;
  padding: 60px 0px;
  margin: 0px;
  text-align: center;
  color: #ffffff;
  background: #5A5A5A;
}

.footer h2 {
  color: #fff;
  font-family: "Francois One", sans-serif;
  text-transform: uppercase;
  font-size: 50px;
  line-height: 50px;
}

.footer-logo {
  margin-bottom: 30px;
}

#back-top {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  text-align: center;
  line-height: 40px;
  background: #1e1e1e;
  color: #fff;
  border-radius: 4px;
  zoom: 1;
  filter: alpha(opacity=50);
  opacity: 0.5;
  z-index: 100;
  display: none;
}

#back-top:hover {
  filter: alpha(opacity=100);
  opacity: 1;
}

/*!
 * "Fork me on GitHub" CSS ribbon v0.1.1 | MIT License
 * https://github.com/simonwhitaker/github-fork-ribbon-css
*/
/* Left will inherit from right (so we don't need to duplicate code) */
.github-fork-ribbon {
  /* The right and left classes determine the side we attach our banner to */
  position: absolute;
  /* Add a bit of padding to give some substance outside the "stitching" */
  padding: 2px 0;
  /* Set the base colour */
  background-color: #a00;
  /* Set a gradient: transparent black at the top to almost-transparent black at the bottom */
  background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(rgba(0, 0, 0, 0.15)));
  background-image: -webkit-linear-gradient(top, transparent, rgba(0, 0, 0, 0.15));
  background-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.15));
  /* Add a drop shadow */
  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.5);
  /* Set the font */
  font: 700 13px "Helvetica Neue", Helvetica, Arial, sans-serif;
  z-index: 9999;
  pointer-events: auto;
}

.github-fork-ribbon a,
.github-fork-ribbon a:hover {
  /* Set the text properties */
  color: #fff;
  text-decoration: none;
  text-shadow: 0 -1px rgba(0, 0, 0, 0.5);
  text-align: center;
  /* Set the geometry. If you fiddle with these you'll also need
     to tweak the top and right values in .github-fork-ribbon. */
  width: 200px;
  line-height: 20px;
  /* Set the layout properties */
  display: inline-block;
  padding: 2px 0;
  /* Add "stitching" effect */
  border-width: 1px 0;
  border-style: dotted;
  border-color: #fff;
  border-color: rgba(255, 255, 255, 0.7);
}

.github-fork-ribbon-wrapper {
  width: 150px;
  height: 150px;
  position: absolute;
  overflow: hidden;
  top: 0;
  z-index: 9999;
  pointer-events: none;
}

.github-fork-ribbon-wrapper.fixed {
  position: fixed;
}

.github-fork-ribbon-wrapper.left {
  left: 0;
}

.github-fork-ribbon-wrapper.right {
  right: 0;
}

.github-fork-ribbon-wrapper.left-bottom {
  position: fixed;
  top: inherit;
  bottom: 0;
  left: 0;
}

.github-fork-ribbon-wrapper.right-bottom {
  position: fixed;
  top: inherit;
  bottom: 0;
  right: 0;
}

.github-fork-ribbon-wrapper.right .github-fork-ribbon {
  top: 42px;
  right: -43px;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

.github-fork-ribbon-wrapper.left .github-fork-ribbon {
  top: 42px;
  left: -43px;
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.github-fork-ribbon-wrapper.left-bottom .github-fork-ribbon {
  top: 80px;
  left: -43px;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

.github-fork-ribbon-wrapper.right-bottom .github-fork-ribbon {
  top: 80px;
  right: -43px;
  -webkit-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.home {
  position: relative;
  height: 100%;
  color: #fff;
  background: #0cbda6;
}

.home .container-fluid,
.home .row {
  height: 100%;
}

.home h1,
.home h2 {
  text-align: center;
  color: #fff;
  font-family: "Francois One", sans-serif;
  text-transform: uppercase;
}

/* *************************************************
** Menu
***************************************************/
#menu-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999999;
}

#menu-wrapper.active-width {
  width: 100%;
  height: 100%;
  display: block;
}

#menu-wrapper a {
  margin: 0;
  font-family: "Oswald", sans-serif;
  font-weight: 700;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.5;
}

#menu-wrapper .menu-toggle {
  position: absolute;
  top: 20px;
  left: 20px;
  overflow: hidden;
  text-decoration: none;
  text-transform: uppercase;
  z-index: 20;
  padding: 5px 0px;
  -webkit-transform-origin: center center;
          transform-origin: center center;
  -webkit-transition-property: color, border-color, margin-left, width, -webkit-transform;
  transition-property: color, border-color, margin-left, width, -webkit-transform;
  transition-property: color, border-color, margin-left, width, transform;
  transition-property: color, border-color, margin-left, width, transform, -webkit-transform;
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-delay: 0s, 0s, 0.2s, 0.2s, 0s;
          transition-delay: 0s, 0s, 0.2s, 0.2s, 0s;
}

#menu-wrapper .menu-toggle .label-menu {
  font-family: "Oswald", sans-serif;
  padding: 2px 5px;
  font-size: 20px;
  -webkit-transition-property: opacity;
  transition-property: opacity;
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out-quad;
          transition-timing-function: ease-out-quad;
  -webkit-transition-delay: .4s;
          transition-delay: .4s;
}

#menu-wrapper .menu-toggle .close {
  display: block;
  position: absolute;
  top: -2px;
  left: -100px;
  font-size: 50px;
  opacity: 0;
  -webkit-transition-property: opacity, -webkit-transform;
  transition-property: opacity, -webkit-transform;
  transition-property: opacity, transform;
  transition-property: opacity, transform, -webkit-transform;
  transition-duratiom: .1s;
  -webkit-transition-timing-function: ease-out-quad;
          transition-timing-function: ease-out-quad;
  -webkit-transition-delay: 0s, 0s;
          transition-delay: 0s, 0s;
}

#menu-wrapper .menu-toggle.open {
  border-color: #fff;
  color: #fff;
  width: 60px;
  height: 60px;
  left: 50%;
  -webkit-transform: translate(-50%, 0);
          transform: translate(-50%, 0);
  margin-left: -30px;
  border: 6px solid rgba(255, 255, 255, 0.5);
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  -webkit-transition-delay: 0s, 0s, 0s, 0s, 0.2s;
          transition-delay: 0s, 0s, 0s, 0s, 0.2s;
}

#menu-wrapper .menu-toggle.open .label-menu {
  opacity: 0;
  -webkit-transition-delay: 0;
          transition-delay: 0;
}

#menu-wrapper .menu-toggle.open .close {
  opacity: 1;
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  -webkit-transition-delay: .2s, 0s;
          transition-delay: .2s, 0s;
  color: #fff;
  left: 3px;
}

#menu-wrapper .menu-toggle.open:hover {
  border-color: #ffffff;
  color: #ffffff;
  background: none;
}

#menu-wrapper .menu {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(90, 90, 90, 0.7);
  background: rgba(12, 189, 166, 0.7);
  opacity: 0;
  z-index: 10;
  -webkit-transition: opacity .2s ease-out-quad;
  transition: opacity .2s ease-out-quad;
  pointer-events: none;
}

#menu-wrapper .menu ul {
  position: absolute;
  top: 62px;
  margin: 0;
  padding: 0;
  list-style: none;
  width: 100%;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  -webkit-transition-duration: .2s;
          transition-duration: .2s;
  -webkit-transition-timing-function: ease-in-quad;
          transition-timing-function: ease-in-quad;
}

#menu-wrapper .menu ul li {
  position: relative;
  text-align: center;
}

#menu-wrapper .menu ul li a {
  padding: 0 12px;
  color: #fff;
  font-size: 40px;
  text-decoration: none;
  text-transform: uppercase;
}

#menu-wrapper .menu ul li a::after {
  position: absolute;
  top: 10px;
  left: auto;
  display: block;
  content: "";
  height: 0%;
  width: 4px;
  background: #ee1848;
  -webkit-transition: width .2s ease-out-quad;
  transition: width .2s ease-out-quad;
}

#menu-wrapper .menu ul li a:hover::after {
  left: 0px;
  right: auto;
  width: 100%;
}

#menu-wrapper .menu.open {
  opacity: 1;
  pointer-events: auto;
}

#menu-wrapper .menu.open ul {
  -webkit-transition-timing-function: ease-out-quad;
          transition-timing-function: ease-out-quad;
}

.light .menu-toggle {
  color: #fff;
}

.light .label-menu {
  border: 2px solid #fff;
}

.dark .menu-toggle {
  color: #0cbda6;
}

.dark .label-menu {
  border: 2px solid #0cbda6;
}

.no-touch .light .menu-toggle:hover {
  background-color: #fff;
  color: #0cbda6;
}

.no-touch .light .menu-toggle:hover.open {
  background: none;
}

.no-touch .dark .menu-toggle:hover {
  background-color: #0cbda6;
  color: #fff;
}

.no-touch .dark .menu-toggle:hover.open {
  background: none;
}

.timeline {
  list-style: none;
  padding: 20px 0 20px;
  position: relative;
}

.timeline:before {
  top: 0;
  bottom: 0;
  position: absolute;
  content: " ";
  width: 3px;
  background-color: #909090;
  left: 50%;
  margin-left: -1.5px;
}

.timeline > li {
  margin-bottom: 20px;
  position: relative;
}

.timeline > li:before,
.timeline > li:after {
  content: " ";
  display: table;
}

.timeline > li:after {
  clear: both;
}

.timeline > li:before,
.timeline > li:after {
  content: " ";
  display: table;
}

.timeline > li:after {
  clear: both;
}

.timeline > li > .timeline-panel {
  width: 46%;
  float: left;
  border-radius: 2px;
  padding: 20px;
  position: relative;
  background: #fff;
}

.timeline > li > .timeline-panel:after {
  position: absolute;
  top: 27px;
  right: -14px;
  display: inline-block;
  border-top: 14px solid transparent;
  border-left: 14px solid #fff;
  border-right: 0 solid #fff;
  border-bottom: 14px solid transparent;
  content: " ";
}

.timeline > li > .timeline-badge {
  color: #fff;
  width: 50px;
  height: 50px;
  line-height: 50px;
  font-size: 1.4em;
  text-align: center;
  position: absolute;
  top: 16px;
  left: 50%;
  margin-left: -25px;
  background-color: #909090;
  z-index: 100;
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
  border-bottom-right-radius: 50%;
  border-bottom-left-radius: 50%;
}

.timeline > li.timeline-inverted > .timeline-panel {
  float: right;
}

.timeline > li.timeline-inverted > .timeline-panel:before {
  border-left-width: 0;
  border-right-width: 15px;
  left: -15px;
  right: auto;
}

.timeline > li.timeline-inverted > .timeline-panel:after {
  border-left-width: 0;
  border-right-width: 14px;
  left: -14px;
  right: auto;
}

.timeline-badge.primary {
  background-color: #2e6da4 !important;
}

.timeline-badge.success {
  background-color: #3f903f !important;
}

.timeline-badge.warning {
  background-color: #f0ad4e !important;
}

.timeline-badge.danger {
  background-color: #0cbda6 !important;
}

.timeline-badge.info {
  background-color: #5bc0de !important;
}

.timeline-title {
  margin-top: 0;
  color: inherit;
}

.timeline-body > p,
.timeline-body > ul {
  margin-bottom: 0;
}

.timeline-body > p + p {
  margin-top: 5px;
}

@media (max-width: 767px) {
  ul.timeline:before {
    left: 40px;
  }
  ul.timeline > li > .timeline-panel {
    width: calc(100% - 90px);
    width: -webkit-calc(100% - 90px);
  }
  ul.timeline > li > .timeline-badge {
    left: 15px;
    margin-left: 0;
    top: 16px;
  }
  ul.timeline > li > .timeline-panel {
    float: right;
  }
  ul.timeline > li > .timeline-panel:before {
    border-left-width: 0;
    border-right-width: 15px;
    left: -15px;
    right: auto;
  }
  ul.timeline > li > .timeline-panel:after {
    border-left-width: 0;
    border-right-width: 14px;
    left: -14px;
    right: auto;
  }
}

/* *************************************************
** Main
***************************************************/
*, *:before, *:after {
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

body {
  font-family: 'Open Sans',  helvetica, arial, sans-serif;
  color: #909090;
  line-height: 1.6;
  overflow-x: hidden;
}

a {
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  color: #0cbda6;
  text-decoration: none;
}

a:focus {
  outline: none;
  text-decoration: none;
  color: #0aa591;
}

a:hover {
  text-decoration: none;
  color: #0aa591;
}

iframe {
  border: 0;
}

h1, h2, h3, h4, .section-title {
  font-family: "Lato", sans-serif;
}

.form-group label.error {
  font-weight: 400;
}

section img {
  margin-top: 10px;
  margin-bottom: 20px;
}

blockquote {
  border-color: #dedede;
}

.mask {
  background: #0cbda6;
  width: 100%;
  height: 100%;
  position: fixed;
  z-index: 99999999;
}

.section-content {
  padding-top: 100px;
  padding-bottom: 100px;
}

.section-title div {
  width: 80px;
  height: 80px;
  margin: 50px auto 0px auto;
  background-color: #eeeeee;
  border-radius: 100%;
  -webkit-border-radius: 100%;
}

.section-title div span {
  color: #ffffff;
  margin-top: 27px;
}

.section-title h1 span {
  background-color: #eeeeee;
  border-radius: 6px;
  -webkit-border-radius: 6px;
  color: #fff;
  padding: 0px 10px;
}

.section-title h1.white span {
  background-color: rgba(239, 239, 239, 0.6);
  border-radius: 6px;
  -webkit-border-radius: 6px;
  color: #fff;
  padding: 0px 10px;
}

.section-title h1 {
  letter-spacing: 2px;
  margin: 0 auto 50px auto;
  padding: 0px 40px;
  position: relative;
  line-height: 1.6;
}

.section-title h1, .section-title h2, .section-title h3 {
  color: #909090;
  display: inline-block;
}

p {
  color: #909090;
}

.clear {
  clear: both;
  display: block;
  height: 0;
  overflow: hidden;
  visibility: hidden;
  width: 0;
}

.img-center {
  margin-left: auto;
  margin-right: auto;
}

.bg--medium {
  background-color: #eeeeee;
}

.bg--light {
  background-color: #fff;
}

.bg--dark {
  background-color: #5A5A5A;
}

.text-center {
  text-align: center;
}

.main {
  position: relative;
  height: 100%;
}

.main section {
  padding: 100px 0 120px;
}

/* *************************************************
** loader
***************************************************/
.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -36.6666666667px;
  margin-left: -36.6666666667px;
  width: 73.3333333333px;
  height: 20px;
}

.loader:after {
  content: "";
  position: absolute;
  left: 26.6666666667px;
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background-color: rgba(255, 255, 255, 0.5);
  box-shadow: -26.6666666667px 0 0 0 white, 26.6666666667px 0 0 0 white;
  -webkit-animation: alter 1s ease-in-out infinite;
          animation: alter 1s ease-in-out infinite;
}

@-webkit-keyframes alter {
  0%, 100% {
    background-color: rgba(255, 255, 255, 0.5);
    box-shadow: -26.6666666667px 0 0 0 white, 26.6666666667px 0 0 0 white;
  }
  50% {
    background-color: white;
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.5), 0 0 0 0 rgba(255, 255, 255, 0.5);
  }
}

@keyframes alter {
  0%, 100% {
    background-color: rgba(255, 255, 255, 0.5);
    box-shadow: -26.6666666667px 0 0 0 white, 26.6666666667px 0 0 0 white;
  }
  50% {
    background-color: white;
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.5), 0 0 0 0 rgba(255, 255, 255, 0.5);
  }
}

/*# sourceMappingURL=data:application/json;base64, */
